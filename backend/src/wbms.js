// backend/src/wbms.js
const path = require('path');
require('dotenv').config({ path: path.join(__dirname, '..', '.env') }); // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ dotenv
console.log('=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ dotenv ===');
console.log('SMTP_HOST:', process.env.SMTP_HOST);
console.log('SMTP_USER:', process.env.SMTP_USER);
console.log('SMTP_PASS:', process.env.SMTP_PASS ? '*****' : 'UNDEFINED');
console.log('FRONTEND_URL:', process.env.FRONTEND_URL);
console.log('=====================================');

const express = require('express');
const mongoose = require('mongoose');
const userRoutes = require('./routes/userRoutes');
const authRoutes = require('./routes/authRoutes');
const subscriptionRoutes = require('./routes/subscriptionRoutes');
const cors = require('cors'); // <-- –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç –ø–∞–∫–µ—Ç–∞ 'cors'
const storageRoutes = require('./routes/storageRoutes'); // –∏–ø–æ—Ä—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∫–ª–∞–¥–∞–º–∏
const wbCabinetRoutes = require('./routes/wbCabinetRoutes'); // –õ–ö WB
const integrationLinkRoutes = require('./routes/integrationLinkRoutes'); // —Å–≤—è–∑–∫–∏ —Å–∫–ª–∞–¥ –∏ –≤–±
const productRoutes = require('./routes/productRoutes'); // —Ç–æ–≤–∞—Ä—ã –í–ë
const organizationRoutes = require('./routes/organizationRoutes'); // <-- –î–û–ë–ê–í–õ–ï–ù–û: –ò–º–ø–æ—Ä—Ç —Ä–æ—É—Ç–æ–≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π
const uslugiRoutes = require('./routes/UslugiRouters'); // <-- –î–û–ë–ê–í–õ–ï–ù–û: –ò–º–ø–æ—Ä—Ç —Ä–æ—É—Ç–æ–≤ —É—Å–ª—É–≥
const settingsRoutes = require('./routes/settingsRoutes'); // <-- –î–û–ë–ê–í–õ–ï–ù–û: –ò–º–ø–æ—Ä—Ç —Ä–æ—É—Ç–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–∫
const cron = require('node-cron');
const postavkiRoutes = require('./routes/postavkiRoutes');
const reportRoutes = require('./routes/reportRoutes'); // <-- –ò–º–ø–æ—Ä—Ç —Ä–æ—É—Ç–æ–≤ –æ—Ç—á–µ—Ç–æ–≤
// const queueRoutes = require('./routes/queueRoutes'); // <-- –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º –æ—á–µ—Ä–µ–¥–∏
const reportCleanup = require('./services/reportsCleanupService');
const limitRoutes = require('./routes/limitRoutes'); // <-- –î–û–ë–ê–í–õ–ï–ù–û: –ò–º–ø–æ—Ä—Ç —Ä–æ—É—Ç–æ–≤ –ª–∏–º–∏—Ç–æ–≤
const paymentRoutes = require('./routes/paymentRoutes'); // <-- –º–∞—Ä—à—Ä—É—Ç—ã –æ–ø–ª–∞—Ç—ã
const wbPriceRoutes = require('./routes/wbPriceRoutes'); // <-- –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è —Ü–µ–Ω WB
const wbPriceService = require('./services/wbPriceService'); // <-- —Å–µ—Ä–≤–∏—Å –¥–ª—è —Ü–µ–Ω WB
const msPriceRoutes = require('./routes/msPriceRoutes'); // <-- –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è —Ü–µ–Ω –ú–æ–π–°–∫–ª–∞–¥
const msPriceAutoUpdateService = require('./services/msPriceAutoUpdateService');
const wbStatisticsRoutes = require('./routes/wbStatisticsRoutes'); // <-- –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è Statistics API WB

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω –ú–æ–π–°–∫–ª–∞–¥
const msAutoUpdateService = new msPriceAutoUpdateService();

const app = express();

// --- –î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ ---
// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å –ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
console.log('--- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è ---');
console.log('process.env.PORT:', process.env.PORT);
console.log('process.env.MONGO_URI:', process.env.MONGO_URI);
console.log('process.env.JWT_SECRET:', process.env.JWT_SECRET ? '*****' : 'UNDEFINED'); // –°–∫—Ä—ã–≤–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π —Å–µ–∫—Ä–µ—Ç
console.log('process.env.SMTP_HOST:', process.env.SMTP_HOST);
console.log('process.env.SMTP_USER:', process.env.SMTP_USER);
console.log('process.env.SMTP_PASS:', process.env.SMTP_PASS ? '*****' : 'UNDEFINED');
console.log('process.env.FRONTEND_URL:', process.env.FRONTEND_URL);

console.log('------------------------------------');
// --- –ö–æ–Ω–µ—Ü –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫ ---


const PORT = process.env.PORT || 3900;
const MONGO_URI = process.env.MONGO_URI;

// --- –û–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π CORS middleware ---
app.use(cors({
  origin: ['http://localhost:5173', 'http://217.15.53.224:5173'],
  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
  allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With'],
  credentials: true
}));
// --- –ö–æ–Ω–µ—Ü –æ–±–Ω–æ–≤–ª—ë–Ω–Ω–æ–≥–æ CORS middleware ---

// Middleware –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON-—Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
app.use(express.json());

// Middleware –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON-—Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
app.use(express.json());

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
if (!MONGO_URI) {
  console.error('–û—à–∏–±–∫–∞: MONGO_URI –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –≤ —Ñ–∞–π–ª–µ .env –∏–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω.');
  console.error('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª .env –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–∞–ø–∫–µ backend/ –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç MONGO_URI.');
  process.exit(1); // –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å, –µ—Å–ª–∏ –Ω–µ—Ç URI –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
}

mongoose.connect(MONGO_URI)
  .then(() => console.log('MongoDB connected successfully'))
  .catch(err => {
    console.error('MongoDB connection error:', err.message); // –í—ã–≤–æ–¥–∏–º —Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    console.error('–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
    console.error('1. MongoDB —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω.');
    console.error('2. –ù–µ–≤–µ—Ä–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è MONGO_URI –≤ .env.');
    console.error('3. –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç–µ–≤—ã–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ MongoDB.');
    process.exit(1); // –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–∏ –æ—à–∏–±–∫–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
  });

// –ú–∞—Ä—à—Ä—É—Ç—ã
app.use('/api/auth', authRoutes); // –ú–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
app.use('/api/subscription', subscriptionRoutes); // –ú–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –ø–æ–¥–ø–∏—Å–æ–∫
app.use('/api/users', userRoutes); // –ú–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ (–∑–∞—â–∏—â–µ–Ω–Ω—ã–µ)
app.use('/api/storages', storageRoutes);
app.use('/api/wbcabinets', wbCabinetRoutes);
app.use('/api/integration-links', integrationLinkRoutes);
app.use('/api/products', productRoutes);
app.use('/api/organizations', organizationRoutes); // <-- –î–û–ë–ê–í–õ–ï–ù–û: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–æ–≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π
app.use('/api/uslugi', uslugiRoutes); // <-- –î–û–ë–ê–í–õ–ï–ù–û: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–æ–≤ —É—Å–ª—É–≥
app.use('/api/settings', settingsRoutes); // <-- –î–û–ë–ê–í–õ–ï–ù–û: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–∫
app.use('/api/postavki', postavkiRoutes);
app.use('/api/reports', reportRoutes); // <-- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–æ–≤ –æ—Ç—á–µ—Ç–æ–≤
app.use('/api/wb-prices', wbPriceRoutes); // <-- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–æ–≤ —Ü–µ–Ω WB
app.use('/api/ms-prices', msPriceRoutes); // <-- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–æ–≤ —Ü–µ–Ω –ú–æ–π–°–∫–ª–∞–¥
app.use('/api/wb-statistics', wbStatisticsRoutes); // <-- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–æ–≤ Statistics API WB
app.use('/api/payment', paymentRoutes); // <-- QR –æ–ø–ª–∞—Ç–∞
app.use('/api/limits', limitRoutes); // <-- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–æ–≤ –ª–∏–º–∏—Ç–æ–≤
// app.use('/api/queue', queueRoutes); // <-- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–æ–≤ –æ—á–µ—Ä–µ–¥–µ–π
require('./models/OrganizationLink'); // <-- –î–û–ë–ê–í–õ–ï–ù–û: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –º–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è
require('./models/Organization'); // <-- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–∞ –º–æ–¥–µ–ª—å —Ç–æ–∂–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –µ—Å–ª–∏ –æ–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
require('./models/Uslugi'); // <-- –î–û–ë–ê–í–õ–ï–ù–û: –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å —É—Å–ª—É–≥
require('./models/StatRashodov'); // <-- –î–û–ë–ê–í–õ–ï–ù–û: –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å —Å—Ç–∞—Ç–µ–π —Ä–∞—Å—Ö–æ–¥–æ–≤
require('./models/Settings'); // <-- –î–û–ë–ê–í–õ–ï–ù–û: –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–∫
require('./models/Report'); // <-- –î–û–ë–ê–í–õ–ï–ù–û: –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å –æ—Ç—á–µ—Ç–æ–≤
// ... (–¥—Ä—É–≥–∏–µ require('./models/')) ...


// –ü—Ä–æ—Å—Ç–æ–π –∫–æ—Ä–Ω–µ–≤–æ–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞
app.get('/', (req, res) => {
  res.send('WBMS Backend is running!');
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω WB
async function startWbPriceUpdates() {
  try {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω WB...');
    
    // –ü–µ—Ä–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞
    await wbPriceService.getPricesForProducts();
    console.log('‚úÖ –ü–µ—Ä–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω WB –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
    setInterval(async () => {
      try {
        console.log(`üïê [${new Date().toISOString()}] –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–æ–≤–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω WB...`);
        await wbPriceService.getPricesForProducts();
        console.log('‚úÖ –ü–ª–∞–Ω–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω WB –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–ª–∞–Ω–æ–≤–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ü–µ–Ω WB:', error.message);
      }
    }, 5 * 60 * 1000); // 5 –º–∏–Ω—É—Ç –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
    
    console.log('üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω WB –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω WB:', error.message);
    console.log('‚ö†Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω WB –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ');
    // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º —Ä–∞–±–æ—Ç—É —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω –ú–æ–π–°–∫–ª–∞–¥
async function startMsPriceUpdates() {
  try {
    if (!msAutoUpdateService) {
      throw new Error('–°–µ—Ä–≤–∏—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω –ú–æ–π–°–∫–ª–∞–¥ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    await msAutoUpdateService.startAutoUpdates();
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω –ú–æ–π–°–∫–ª–∞–¥:', error.message);
    // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º —Ä–∞–±–æ—Ç—É —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω
  }
}

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
  console.log(`Server running on port ${PORT}`);
  // –ó–∞–ø—É—Å–∫–∞–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –æ—á–∏—Å—Ç–∫—É —Å—Ç–∞—Ä—ã—Ö –æ—Ç—á—ë—Ç–æ–≤
  reportCleanup.scheduleDailyCleanup();
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω WB —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π
  setTimeout(() => {
    startWbPriceUpdates();
  }, 5000); // 5 —Å–µ–∫—É–Ω–¥ –∑–∞–¥–µ—Ä–∂–∫–∏ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
  
      // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω –ú–æ–π–°–∫–ª–∞–¥ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π 10 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
      startMsPriceUpdates();
    }, 10000); // 10 —Å–µ–∫—É–Ω–¥ –∑–∞–¥–µ—Ä–∂–∫–∏ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
});
