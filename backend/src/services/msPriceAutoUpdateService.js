console.log('üì¶ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è MsPriceAutoUpdateService...');
const MsPriceUpdateService = require('./msPriceUpdateService');
console.log('‚úÖ MsPriceUpdateService –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω');
const IntegrationLink = require('../models/IntegrationLink');
console.log('‚úÖ IntegrationLink –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω');
console.log('üì¶ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω');

class MsPriceAutoUpdateService {
  constructor() {
    console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è MsPriceAutoUpdateService...');
    
    try {
      this.msPriceService = new MsPriceUpdateService();
      console.log('‚úÖ MsPriceUpdateService —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ MsPriceUpdateService:', error.message);
      throw error;
    }
    
    this.updateInterval = null;
    this.isRunning = false;
    
    console.log('‚úÖ MsPriceAutoUpdateService –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ');
  }

  /**
   * –ó–∞–ø—É—Å–∫–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω –ú–æ–π–°–∫–ª–∞–¥
   */
  async startAutoUpdates() {
    console.log('üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...');
    
    if (this.isRunning) {
      console.log('‚ö†Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω –ú–æ–π–°–∫–ª–∞–¥ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–æ');
      return;
    }

    try {
      console.log('üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω –ú–æ–π–°–∫–ª–∞–¥...');
      console.log('üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω...');
      
      if (!this.msPriceService) {
        throw new Error('–°–µ—Ä–≤–∏—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω –ú–æ–π–°–∫–ª–∞–¥ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      }
      
      console.log('‚úÖ –°–µ—Ä–≤–∏—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω –¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ...');
      
      // –ü–µ—Ä–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞
      await this.performInitialUpdate();
      console.log('‚úÖ –ü–µ—Ä–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω –ú–æ–π–°–∫–ª–∞–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
      
      console.log('‚è∞ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç...');
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
      this.updateInterval = setInterval(async () => {
        try {
          console.log(`üïê [${new Date().toISOString()}] –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–æ–≤–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω –ú–æ–π–°–∫–ª–∞–¥...`);
          await this.performScheduledUpdate();
          console.log('‚úÖ –ü–ª–∞–Ω–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω –ú–æ–π–°–∫–ª–∞–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–ª–∞–Ω–æ–≤–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ü–µ–Ω –ú–æ–π–°–∫–ª–∞–¥:', error.message);
          console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.stack);
        }
      }, 5 * 60 * 1000); // 5 –º–∏–Ω—É—Ç –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
      
      this.isRunning = true;
      console.log('üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω –ú–æ–π–°–∫–ª–∞–¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç');
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω –ú–æ–π–°–∫–ª–∞–¥:', error.message);
      console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.stack);
      console.log('‚ö†Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω –ú–æ–π–°–∫–ª–∞–¥ –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ');
      // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º —Ä–∞–±–æ—Ç—É —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω
    }
  }

  /**
   * –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω
   */
  stopAutoUpdates() {
    if (this.updateInterval) {
      clearInterval(this.updateInterval);
      this.updateInterval = null;
      this.isRunning = false;
      console.log('‚èπÔ∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω –ú–æ–π–°–∫–ª–∞–¥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    }
  }

  /**
   * –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–µ—Ä–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞
   */
  async performInitialUpdate() {
    try {
      console.log('üîç –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–∏—Å–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π —Å —Ç–æ–∫–µ–Ω–∞–º–∏ –ú–æ–π–°–∫–ª–∞–¥...');
      
      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —Ç–æ–∫–µ–Ω–∞–º–∏ –ú–æ–π–°–∫–ª–∞–¥
      // –¢–æ–∫–µ–Ω –ú–æ–π–°–∫–ª–∞–¥ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ Storage.token
      const integrations = await IntegrationLink.find({})
        .populate('storage', 'token name')
        .exec();
      
      // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏, —É –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å —Ç–æ–∫–µ–Ω –≤ storage
      const integrationsWithMsToken = integrations.filter(integration => 
        integration.storage && integration.storage.token
      );

      console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π: –Ω–∞–π–¥–µ–Ω–æ ${integrationsWithMsToken.length} –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π —Å —Ç–æ–∫–µ–Ω–∞–º–∏ –ú–æ–π–°–∫–ª–∞–¥`);

      if (integrationsWithMsToken.length === 0) {
        console.log('‚ÑπÔ∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π —Å —Ç–æ–∫–µ–Ω–∞–º–∏ –ú–æ–π–°–∫–ª–∞–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω');
        return;
      }

      console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${integrationsWithMsToken.length} –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω –ú–æ–π–°–∫–ª–∞–¥`);
      
      // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è—Ö
      integrationsWithMsToken.forEach((integration, index) => {
        console.log(`  ${index + 1}. ID: ${integration._id}, –ù–∞–∑–≤–∞–Ω–∏–µ: ${integration.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}, –¢–æ–∫–µ–Ω: ${integration.storage.token ? '–ù–∞—Å—Ç—Ä–æ–µ–Ω' : '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
      });

      // –û–±–Ω–æ–≤–ª—è–µ–º —Ü–µ–Ω—ã –¥–ª—è –∫–∞–∂–¥–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
      for (const integration of integrationsWithMsToken) {
        try {
          console.log(`üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ ${integration._id} (${integration.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'})`);
          
          const result = await this.msPriceService.updateAllPrices(integration._id, integration.storage.token);
          
          if (result.success) {
            console.log(`‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è ${integration._id}: –æ–±–Ω–æ–≤–ª–µ–Ω–æ ${result.updatedCount}/${result.totalProducts} —Ç–æ–≤–∞—Ä–æ–≤`);
          } else {
            console.error(`‚ùå –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è ${integration._id}: ${result.message}`);
          }
        } catch (error) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ ${integration._id}:`, error.message);
          console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.stack);
        }
      }

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–≤–∏—á–Ω–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ü–µ–Ω –ú–æ–π–°–∫–ª–∞–¥:', error.message);
      console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.stack);
      throw error;
    }
  }

  /**
   * –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–ª–∞–Ω–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω
   */
  async performScheduledUpdate() {
    try {
      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —Ç–æ–∫–µ–Ω–∞–º–∏ –ú–æ–π–°–∫–ª–∞–¥
      // –¢–æ–∫–µ–Ω –ú–æ–π–°–∫–ª–∞–¥ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ Storage.token
      const integrations = await IntegrationLink.find({})
        .populate('storage', 'token name')
        .exec();
      
      // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏, —É –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å —Ç–æ–∫–µ–Ω –≤ storage
      const integrationsWithMsToken = integrations.filter(integration => 
        integration.storage && integration.storage.token
      );

      if (integrationsWithMsToken.length === 0) {
        console.log('‚ÑπÔ∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π —Å —Ç–æ–∫–µ–Ω–∞–º–∏ –ú–æ–π–°–∫–ª–∞–¥ –¥–ª—è –ø–ª–∞–Ω–æ–≤–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è');
        return;
      }

      console.log(`üìä –ü–ª–∞–Ω–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω –¥–ª—è ${integrationsWithMsToken.length} –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π –ú–æ–π–°–∫–ª–∞–¥`);

      // –û–±–Ω–æ–≤–ª—è–µ–º —Ü–µ–Ω—ã –¥–ª—è –∫–∞–∂–¥–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
      for (const integration of integrationsWithMsToken) {
        try {
          console.log(`üîÑ –ü–ª–∞–Ω–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ ${integration._id}`);
          
          const result = await this.msPriceService.updateAllPrices(integration._id, integration.storage.token);
          
          if (result.success) {
            console.log(`‚úÖ –ü–ª–∞–Ω–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ ${integration._id}: ${result.updatedCount}/${result.totalProducts} —Ç–æ–≤–∞—Ä–æ–≤`);
          } else {
            console.error(`‚ùå –ü–ª–∞–Ω–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ ${integration._id}: ${result.message}`);
          }
        } catch (error) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–ª–∞–Ω–æ–≤–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ ${integration._id}:`, error.message);
        }
      }

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–ª–∞–Ω–æ–≤–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ü–µ–Ω –ú–æ–π–°–∫–ª–∞–¥:', error.message);
      throw error;
    }
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
   */
  getStatus() {
    return {
      isRunning: this.isRunning,
      updateInterval: this.updateInterval ? '5 –º–∏–Ω—É—Ç' : '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω',
      lastUpdate: this.lastUpdate || '–ù–µ –≤—ã–ø–æ–ª–Ω—è–ª–æ—Å—å'
    };
  }

  /**
   * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
   */
  async forceUpdateForIntegration(integrationId) {
    try {
      const integration = await IntegrationLink.findById(integrationId);
      
      if (!integration) {
        throw new Error('–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      }

      if (!integration.storage || !integration.storage.token) {
        throw new Error('–¢–æ–∫–µ–Ω –ú–æ–π–°–∫–ª–∞–¥ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –¥–∞–Ω–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏');
      }

      console.log(`üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ ${integrationId}`);
      
                const result = await this.msPriceService.updateAllPrices(integrationId, integration.storage.token);
      
      if (result.success) {
        console.log(`‚úÖ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: ${result.updatedCount}/${result.totalProducts} —Ç–æ–≤–∞—Ä–æ–≤`);
      } else {
        console.error(`‚ùå –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å: ${result.message}`);
      }

      return result;

    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ ${integrationId}:`, error.message);
      throw error;
    }
  }
}

module.exports = MsPriceAutoUpdateService;
