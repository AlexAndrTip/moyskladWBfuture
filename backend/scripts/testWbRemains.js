/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API –æ—Å—Ç–∞—Ç–∫–æ–≤ FBY WB
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * node scripts/testWbRemains.js
 * 
 * –ü–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:
 * 1. –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω
 * 2. –í –ë–î –µ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å WB –∫–∞–±–∏–Ω–µ—Ç–∞–º–∏
 * 3. –£ WB –∫–∞–±–∏–Ω–µ—Ç–æ–≤ –µ—Å—Ç—å –≤–∞–ª–∏–¥–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã
 */

const axios = require('axios');
require('dotenv').config({ path: require('path').join(__dirname, '..', '.env') });

const API_BASE_URL = process.env.API_BASE_URL || 'http://localhost:3900';

async function testWbRemainsApi() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –æ—Å—Ç–∞—Ç–∫–æ–≤ FBY WB...\n');

    // 1. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
    console.log('1. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    const usersResponse = await axios.get(`${API_BASE_URL}/api/users`, {
      headers: {
        'Authorization': `Bearer ${process.env.TEST_TOKEN || 'test-token'}`,
        'Content-Type': 'application/json'
      }
    });
    
    if (usersResponse.data && usersResponse.data.length > 0) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${usersResponse.data.length}`);
      const testUser = usersResponse.data[0];
      console.log(`   –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${testUser.username} (${testUser._id})`);
    } else {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      return;
    }

    // 2. –ü–æ–ª—É—á–∞–µ–º WB –∫–∞–±–∏–Ω–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('\n2. –ü–æ–ª—É—á–∞–µ–º WB –∫–∞–±–∏–Ω–µ—Ç—ã...');
    const cabinetsResponse = await axios.get(`${API_BASE_URL}/api/wbcabinets`, {
      headers: {
        'Authorization': `Bearer ${process.env.TEST_TOKEN || 'test-token'}`,
        'Content-Type': 'application/json'
      }
    });

    if (cabinetsResponse.data && cabinetsResponse.data.length > 0) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ WB –∫–∞–±–∏–Ω–µ—Ç–æ–≤: ${cabinetsResponse.data.length}`);
      cabinetsResponse.data.forEach((cabinet, index) => {
        console.log(`   ${index + 1}. ${cabinet.name} (${cabinet._id})`);
      });
    } else {
      console.log('‚ùå WB –∫–∞–±–∏–Ω–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      return;
    }

    // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤
    console.log('\n3. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤...');
    const testCabinetId = cabinetsResponse.data[0]._id;
    
    try {
      const testResponse = await axios.get(`${API_BASE_URL}/api/wb-remains/test/${testCabinetId}`, {
        headers: {
          'Authorization': `Bearer ${process.env.TEST_TOKEN || 'test-token'}`,
          'Content-Type': 'application/json'
        }
      });

      if (testResponse.data && testResponse.data.taskId) {
        console.log(`‚úÖ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ`);
        console.log(`   TaskId: ${testResponse.data.taskId}`);
        console.log(`   –ö–∞–±–∏–Ω–µ—Ç: ${testResponse.data.cabinetName}`);
      } else {
        console.log('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —Ç–µ—Å—Ç–æ–≤–æ–≥–æ API');
      }
    } catch (testError) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞:`);
      console.log(`   –°—Ç–∞—Ç—É—Å: ${testError.response?.status || 'N/A'}`);
      console.log(`   –°–æ–æ–±—â–µ–Ω–∏–µ: ${testError.response?.data?.message || testError.message}`);
    }

    // 4. –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—Å—Ç–∞—Ç–∫–æ–≤
    console.log('\n4. –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—Å—Ç–∞—Ç–∫–æ–≤...');
    try {
      const statsResponse = await axios.get(`${API_BASE_URL}/api/wb-remains/stats`, {
        headers: {
          'Authorization': `Bearer ${process.env.TEST_TOKEN || 'test-token'}`,
          'Content-Type': 'application/json'
        }
      });

      if (statsResponse.data) {
        console.log(`‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ`);
        console.log(`   –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤: ${statsResponse.data.overall.totalProducts}`);
        console.log(`   –¢–æ–≤–∞—Ä–æ–≤ —Å –æ—Å—Ç–∞—Ç–∫–∞–º–∏: ${statsResponse.data.overall.totalWithStock}`);
        console.log(`   –û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫: ${statsResponse.data.overall.totalStockQuantity}`);
        console.log(`   –ö–∞–±–∏–Ω–µ—Ç–æ–≤: ${statsResponse.data.byCabinet.length}`);
      } else {
        console.log('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
      }
    } catch (statsError) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:`);
      console.log(`   –°—Ç–∞—Ç—É—Å: ${statsError.response?.status || 'N/A'}`);
      console.log(`   –°–æ–æ–±—â–µ–Ω–∏–µ: ${statsError.response?.data?.message || statsError.message}`);
    }

    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
    if (error.response) {
      console.error(`   –°—Ç–∞—Ç—É—Å: ${error.response.status}`);
      console.error(`   –î–∞–Ω–Ω—ã–µ:`, error.response.data);
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
if (require.main === module) {
  testWbRemainsApi();
}

module.exports = { testWbRemainsApi };
