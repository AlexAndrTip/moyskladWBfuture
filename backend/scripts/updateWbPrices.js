// backend/scripts/updateWbPrices.js
const axios = require('axios');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const BASE_URL = process.env.BASE_URL || 'http://localhost:3900';
const API_TOKEN = process.env.API_TOKEN;
const UPDATE_INTERVAL = process.env.UPDATE_INTERVAL || 3600000; // 1 —á–∞—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

if (!API_TOKEN) {
  console.error('‚ùå –û—à–∏–±–∫–∞: API_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  console.error('–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è API_TOKEN');
  console.error('–ü—Ä–∏–º–µ—Ä: export API_TOKEN="your_jwt_token"');
  process.exit(1);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω
async function updateWbPrices() {
  try {
    console.log(`üïê [${new Date().toISOString()}] –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω...`);
    
    const response = await axios.get(`${BASE_URL}/api/wb-prices/update`, {
      headers: {
        'Authorization': `Bearer ${API_TOKEN}`,
        'Content-Type': 'application/json'
      },
      timeout: 300000 // 5 –º–∏–Ω—É—Ç —Ç–∞–π–º–∞—É—Ç
    });

    if (response.data.success) {
      const { totalProducts, totalUpdated, totalErrors, batchesProcessed } = response.data.data;
      console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!`);
      console.log(`   üì¶ –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: ${totalProducts}`);
      console.log(`   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${totalUpdated}`);
      console.log(`   ‚ùå –û—à–∏–±–æ–∫: ${totalErrors}`);
      console.log(`   üîÑ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –±–∞—Ç—á–µ–π: ${batchesProcessed}`);
    } else {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${response.data.message}`);
    }

  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ü–µ–Ω: ${error.message}`);
    if (error.response) {
      console.error(`   –°—Ç–∞—Ç—É—Å: ${error.response.status}`);
      console.error(`   –û—Ç–≤–µ—Ç: ${JSON.stringify(error.response.data)}`);
    }
  }
}



// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ü–µ–Ω WB');
  console.log('=====================================');
  console.log(`üåê –ë–∞–∑–æ–≤—ã–π URL: ${BASE_URL}`);
  console.log(`‚è∞ –ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${UPDATE_INTERVAL / 60000} –º–∏–Ω—É—Ç`);
  console.log(`üîë API —Ç–æ–∫–µ–Ω: ${API_TOKEN ? '–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`);
  
  // –ü–µ—Ä–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
  await updateWbPrices();
  
  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  setInterval(async () => {
    await updateWbPrices();
  }, UPDATE_INTERVAL);
  
  console.log(`\nüîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –∫–∞–∂–¥—ã–µ ${UPDATE_INTERVAL / 60000} –º–∏–Ω—É—Ç`);
  console.log('üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C');
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
  process.on('SIGINT', () => {
    console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è, —Å–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    process.exit(0);
  });
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if (require.main === module) {
  main().catch((error) => {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  });
}

module.exports = { updateWbPrices, main }; 