/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≥—Ä—É–∑–∫–æ–π —Ü–µ–Ω
 * –¥–ª—è –¥–≤—É—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏—Ö –æ–¥–∏–Ω WB –∫–∞–±–∏–Ω–µ—Ç
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * node scripts/testPriceFix.js
 * 
 * –ü–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:
 * 1. –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω
 * 2. –í –ë–î –µ—Å—Ç—å –¥–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –æ–¥–Ω–∏–º WB –∫–∞–±–∏–Ω–µ—Ç–æ–º
 * 3. –£ WB –∫–∞–±–∏–Ω–µ—Ç–∞ –µ—Å—Ç—å –≤–∞–ª–∏–¥–Ω—ã–π —Ç–æ–∫–µ–Ω
 * 4. –£ –æ–±–æ–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –µ—Å—Ç—å —Ç–æ–≤–∞—Ä—ã —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ nmID
 */

const axios = require('axios');
require('dotenv').config({ path: require('path').join(__dirname, '..', '.env') });

const API_BASE_URL = process.env.API_BASE_URL || 'http://localhost:3900';

async function testPriceFix() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≥—Ä—É–∑–∫–æ–π —Ü–µ–Ω...\n');

    // 1. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('1. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    const usersResponse = await axios.get(`${API_BASE_URL}/api/users`, {
      headers: {
        'Authorization': `Bearer ${process.env.TEST_TOKEN || 'test-token'}`,
        'Content-Type': 'application/json'
      }
    });
    
    if (usersResponse.data && usersResponse.data.length >= 2) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${usersResponse.data.length}`);
      const user1 = usersResponse.data[0];
      const user2 = usersResponse.data[1];
      console.log(`   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1: ${user1.username} (${user1._id})`);
      console.log(`   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2: ${user2.username} (${user2._id})`);
    } else {
      console.log('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 2)');
      return;
    }

    // 2. –ü–æ–ª—É—á–∞–µ–º WB –∫–∞–±–∏–Ω–µ—Ç—ã
    console.log('\n2. –ü–æ–ª—É—á–∞–µ–º WB –∫–∞–±–∏–Ω–µ—Ç—ã...');
    const cabinetsResponse = await axios.get(`${API_BASE_URL}/api/wbcabinets`, {
      headers: {
        'Authorization': `Bearer ${process.env.TEST_TOKEN || 'test-token'}`,
        'Content-Type': 'application/json'
      }
    });

    if (cabinetsResponse.data && cabinetsResponse.data.length > 0) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ WB –∫–∞–±–∏–Ω–µ—Ç–æ–≤: ${cabinetsResponse.data.length}`);
      const testCabinet = cabinetsResponse.data[0];
      console.log(`   –¢–µ—Å—Ç–æ–≤—ã–π –∫–∞–±–∏–Ω–µ—Ç: ${testCabinet.name} (${testCabinet._id})`);
    } else {
      console.log('‚ùå WB –∫–∞–±–∏–Ω–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      return;
    }

    // 3. –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('\n3. –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    const user1 = usersResponse.data[0];
    const user2 = usersResponse.data[1];
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user1ProductsResponse = await axios.get(`${API_BASE_URL}/api/products?userId=${user1._id}&limit=10`, {
      headers: {
        'Authorization': `Bearer ${process.env.TEST_TOKEN || 'test-token'}`,
        'Content-Type': 'application/json'
      }
    });

    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user2ProductsResponse = await axios.get(`${API_BASE_URL}/api/products?userId=${user2._id}&limit=10`, {
      headers: {
        'Authorization': `Bearer ${process.env.TEST_TOKEN || 'test-token'}`,
        'Content-Type': 'application/json'
      }
    });

    if (user1ProductsResponse.data && user1ProductsResponse.data.products && user1ProductsResponse.data.products.length > 0) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 1: ${user1ProductsResponse.data.products.length}`);
    } else {
      console.log('‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 1 –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤');
      return;
    }

    if (user2ProductsResponse.data && user2ProductsResponse.data.products && user2ProductsResponse.data.products.length > 0) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 2: ${user2ProductsResponse.data.products.length}`);
    } else {
      console.log('‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 2 –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤');
      return;
    }

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ–≤–∞—Ä—ã —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ nmID
    const user1Products = user1ProductsResponse.data.products;
    const user2Products = user2ProductsResponse.data.products;
    
    const user1NmIDs = user1Products.map(p => p.nmID).filter(Boolean);
    const user2NmIDs = user2Products.map(p => p.nmID).filter(Boolean);
    
    const commonNmIDs = user1NmIDs.filter(nmID => user2NmIDs.includes(nmID));
    
    if (commonNmIDs.length > 0) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ nmID: ${commonNmIDs.length}`);
      console.log(`   –û–±—â–∏–µ nmID: ${commonNmIDs.slice(0, 5).join(', ')}${commonNmIDs.length > 5 ? '...' : ''}`);
    } else {
      console.log('‚ö†Ô∏è –¢–æ–≤–∞—Ä—ã —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ nmID –Ω–µ –Ω–∞–π–¥–µ–Ω—ã - —Ç–µ—Å—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–ø–æ–ª–Ω—ã–º');
    }

    // 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('\n5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    try {
      const user1PriceResponse = await axios.get(`${API_BASE_URL}/api/wb-prices/update?limit=10`, {
        headers: {
          'Authorization': `Bearer ${process.env.TEST_TOKEN || 'test-token'}`,
          'Content-Type': 'application/json'
        }
      });

      if (user1PriceResponse.data && user1PriceResponse.data.success) {
        console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 1 –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ`);
        console.log(`   –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${user1PriceResponse.data.data?.totalUpdated || 'N/A'}`);
      } else {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ü–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 1');
      }
    } catch (priceError) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ü–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 1:`);
      console.log(`   –°—Ç–∞—Ç—É—Å: ${priceError.response?.status || 'N/A'}`);
      console.log(`   –°–æ–æ–±—â–µ–Ω–∏–µ: ${priceError.response?.data?.message || priceError.message}`);
    }

    // 6. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('\n6. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    try {
      const user2PriceResponse = await axios.get(`${API_BASE_URL}/api/wb-prices/update?limit=10`, {
        headers: {
          'Authorization': `Bearer ${process.env.TEST_TOKEN || 'test-token'}`,
          'Content-Type': 'application/json'
        }
      });

      if (user2PriceResponse.data && user2PriceResponse.data.success) {
        console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 2 –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ`);
        console.log(`   –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${user2PriceResponse.data.data?.totalUpdated || 'N/A'}`);
      } else {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ü–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 2');
      }
    } catch (priceError) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ü–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 2:`);
      console.log(`   –°—Ç–∞—Ç—É—Å: ${priceError.response?.status || 'N/A'}`);
      console.log(`   –°–æ–æ–±—â–µ–Ω–∏–µ: ${priceError.response?.data?.message || priceError.message}`);
    }

    // 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ü–µ–Ω—ã –æ–±–Ω–æ–≤–∏–ª–∏—Å—å –¥–ª—è –æ–±–æ–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('\n7. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ü–µ–Ω—ã...');
    
    // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const updatedUser1ProductsResponse = await axios.get(`${API_BASE_URL}/api/products?userId=${user1._id}&limit=10`, {
      headers: {
        'Authorization': `Bearer ${process.env.TEST_TOKEN || 'test-token'}`,
        'Content-Type': 'application/json'
      }
    });

    // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const updatedUser2ProductsResponse = await axios.get(`${API_BASE_URL}/api/products?userId=${user2._id}&limit=10`, {
      headers: {
        'Authorization': `Bearer ${process.env.TEST_TOKEN || 'test-token'}`,
        'Content-Type': 'application/json'
      }
    });

    if (updatedUser1ProductsResponse.data && updatedUser1ProductsResponse.data.products) {
      const user1ProductsWithPrices = updatedUser1ProductsResponse.data.products.filter(p => 
        p.sizes && p.sizes.some(s => s.priceWB > 0)
      );
      console.log(`‚úÖ –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 1 —Ç–æ–≤–∞—Ä–æ–≤ —Å —Ü–µ–Ω–∞–º–∏ WB: ${user1ProductsWithPrices.length}`);
    }

    if (updatedUser2ProductsResponse.data && updatedUser2ProductsResponse.data.products) {
      const user2ProductsWithPrices = updatedUser2ProductsResponse.data.products.filter(p => 
        p.sizes && p.sizes.some(s => s.priceWB > 0)
      );
      console.log(`‚úÖ –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 2 —Ç–æ–≤–∞—Ä–æ–≤ —Å —Ü–µ–Ω–∞–º–∏ WB: ${user2ProductsWithPrices.length}`);
    }

    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log('\nüìã –†–µ–∑—é–º–µ:');
    console.log('   - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –æ–±–µ—Å–ø–µ—á–∏—Ç—å, —á—Ç–æ –∫–∞–∂–¥—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç —Ü–µ–Ω—ã —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–≤–æ–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤');
    console.log('   - –¢–æ–≤–∞—Ä—ã —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ nmID —É —Ä–∞–∑–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–æ–ª–∂–Ω—ã –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ');
    console.log('   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è');

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
    if (error.response) {
      console.error(`   –°—Ç–∞—Ç—É—Å: ${error.response.status}`);
      console.error(`   –î–∞–Ω–Ω—ã–µ:`, error.response.data);
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
if (require.main === module) {
  testPriceFix();
}

module.exports = { testPriceFix };
